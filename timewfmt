#!/usr/bin/env bash
#
# convert from a yyyyddhhmmss to an iso8601 (less tz) time for timew
#
# any supplied substring is superimposed over rhs of current time, thus
# comprising a partially-specified time that has its unspecified
# remainder defaulted into by the current time.  if superimposed time is
# calculated to be later than the invocation time, the superimposition
# is recalculated over a time 24 hours prior to invocation.
#

if ! [[ $1 =~ [[:digit:]]{1,14} ]]
then echo "invalid date given" >&2; false; exit; fi

fmt=%Y%m%d%H%M%S
now_t=${EPOCHSECONDS:?}
yester_t=$((now_t - 86400))
printf -v now_d "%($fmt)T" $now_t
printf -v yester_d "%($fmt)T" $yester_t

rhsimpose () { printf -v t ${2:0:-${#1}}$1; }
rhsimpose $1 $now_d
if ((t > now_d))
then rhsimpose $1 $yester_d; fi

# todo: should this have a newline? it's normally in a subshell with other
# args on the command line, not used standalone, so no newline is
# appropriate.  should we use tty(1)?  but that still wouldn't work
# correctly in most usage scenarios which are backticks, not pipelines.
# we could use $SHLVL but this would be incorrect in a wide variety of
# situations...
#
printf ${t:0:4}-${t:4:2}-${t:6:2}T${t:8:2}:${t:10:2}:${t:12:2}
